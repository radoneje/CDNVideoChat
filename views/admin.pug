extends layout
block content
  script(src="include/axios.js")
block content
  .sAWr#app
    h4 List of active rooms
    .button(style="width:100px" @click="addRoom()") Add room
    .sAbox
      .sArow(v-for="item in rooms")
        .sArowTitle id: <b>{{item.id}}</b>, date created: <b>{{moment(item.dateCreate).format('DD.MM.YYYY HH:mm:ss')}}</b>
        .sArrowLink
          a(:href="'test/'+item.publicUUID+'/ru'" target="_blank") Test
          span &nbsp;&nbsp;&nbsp;
          a(:href="'moderator/'+item.uuid" target="_blank") Moderator
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          a(:href="'#'" style="color:red" @click="deleteRoom(item)") delete

      .sStext show {{rooms.length}} records of {{total}}, start of: {{skip}}
      .sStext
        .button.maxContent(v-if="skip>0" @click="prev()") << prev
        .button.maxContent(v-if="(rooms.length+skip)<total" @click="next()") next >>
  script(src="include/axios.js")
  script(src="include/vue.min.js")
  script(src="include/moment.min.js")
  script.
    "use strict"
    let app = new Vue({
      el:"#app",
      data:{
        rooms:[],
        total:0,
        skip:0
      },
      methods:{
        prev: async function (item) {
          let s=parseInt(this.skip-50);
          if(s<0)
            s=0;
          let r = await axios.get("api/room/" + (s));
          this.rooms = r.data.rooms;
          this.total = r.data.total;
          this.skip = r.data.skip;
        },
        next :async function(item) {
          let r = await axios.get("api/room/"+parseInt(parseInt(this.skip)+50));
          this.rooms = r.data.rooms;
          this.total = r.data.total;
          this.skip = r.data.skip;
        },
        deleteRoom:async function(item) {
          if(confirm('Delete this room?')) {
            let r = await axios.delete("api/room/" + item.id);
            this.rooms = this.rooms.filter(r => {
              return r.id != item.id
            });
          }
        },
        addRoom:async function(){
          let r=await axios.post("api/room");
          this.rooms=r.data.concat(this.rooms);
        }
      },
      mounted:async function (){
        let r=await axios.get("api/room");
        this.rooms=r.data.rooms;
        this.total=r.data.total;
        this.skip=r.data.skip;

      }
    });


